---
- name: Ensure mandatory variables are defined
  assert:
    that:
      - roundcube_mysql_password is defined
      - roundcube_des_key is defined

- name: Ensure crontab is installed
  apt:
   pkg: "cron"
   state: present

- name: Ensure roundcube group is present
  group:
    name: "{{ roundcube_group }}"

- name: Ensure roundcube user is present
  user:
    name: "{{ roundcube_user }}"
    home: "{{ roundcube_user_home }}"
    shell: "{{ roundcube_user_shell }}"
    groups: "{{ roundcube_group }}"

- name: Install Roundcube dependencies
  apt:
    pkg: "{{ roundcube_dependencies }}"
    state: present
    install_recommends: False

- name: Ensure database user is present
  community.mysql.mysql_user:
    name: "{{ roundcube_mysql_user }}"
    password: "{{ roundcube_mysql_password }}"
    priv: "{{ roundcube_mysql_db }}.*:ALL,GRANT"
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock

- name: Ensure database is present
  community.mysql.mysql_db:
    name: "{{ roundcube_mysql_db }}"
    state: present
    encoding: "utf8"
    collation: "utf8_general_ci"
    login_unix_socket: /run/mysqld/mysqld.sock
  notify: Import database

- name: Import mcrypt tasks
  import_tasks: mcrypt.yml
  when: ansible_distribution_major_version|int > 9

- name: Check if roundcube directory exists
  stat:
    path: "{{ roundcube_user_home }}/roundcubemail-{{ roundcube_version }}"
  register: "roundcube_directory"

- name: Get roundcube release
  get_url:
    url: "https://github.com/roundcube/roundcubemail/releases/download/{{ roundcube_version }}/roundcubemail-{{ roundcube_version }}-complete.tar.gz"
    dest: "{{ roundcube_working_dir }}"
    owner: "{{ roundcube_user }}"
    group: "{{ roundcube_group }}"
    mode: '0440'
  when: not ansible_check_mode
  register: download

- name: Unarchive roundcube
  unarchive:
    src: "{{ roundcube_working_dir }}/roundcubemail-{{ roundcube_version }}-complete.tar.gz"
    dest: "{{ roundcube_working_dir }}"
    owner: "{{ roundcube_user }}"
    group: "{{ roundcube_group }}"
    mode: 0750
    copy: no
  when: (download.changed) or (not roundcube_directory.stat.exists)

- name: Link to current roundcube release
  file:
    src: "{{ roundcube_working_dir }}/roundcubemail-{{ roundcube_version }}"
    dest: "{{ roundcube_working_dir }}/current"
    owner: "{{ roundcube_user }}"
    group: "{{ roundcube_group }}"
    state: link
    follow: False
    mode: 0755
  register: link
  notify: Restart apache

- name: Link www to current roundcube release public_html directory
  file:
    src: "{{ roundcube_working_dir }}/current/public_html"
    dest: "{{ roundcube_path }}"
    owner: "{{ roundcube_user }}"
    group: "{{ roundcube_group }}"
    state: link
    follow: False
    mode: 0755
  register: link
  notify: Restart apache

- name: Ensure roundcube and plugin configs are latest
  template:
    src: "{{ item }}.j2"
    dest: "{{ roundcube_working_dir }}/current/{{ item }}"
    owner: "{{ roundcube_user }}"
    group: "{{ roundcube_group }}"
    mode: 0640
  with_items:
    - config/config.inc.php
    - "{{ roundcube_configs_extra | default() }}"
  tags:
    - sieve
    - skin

- name: Run roundcube upgrade script
  command: "{{ roundcube_working_dir }}/current/bin/update.sh"
  changed_when: true
  when:
   - link.changed
   - not testing|default(False)

- name: Create Roundcube cleandb cronjob
  cron:
    name: "Roundcube cleandb cronjob"
    minute: "10"
    hour: "6"
    user: "{{ roundcube_user }}"
    job: "{{ roundcube_working_dir }}/current/bin/cleandb.sh >/dev/null"
    cron_file: roundcube

- name: Create Roundcube garbage collector cronjob
  cron:
    name: "Roundcube garbage collector cronjob"
    minute: "30"
    user: "{{ roundcube_user }}"
    job: "{{ roundcube_working_dir }}/current/bin/gc.sh >/dev/null"
    cron_file: roundcube

- name: Import skining tasks
  import_tasks: skin.yml
  tags:
    - skin

- name: Import carddav plugin tasks
  import_tasks: carddav.yml
  when: "'carddav' in roundcube_plugins"
  tags:
    - carddav

- name: Import enigma plugin tasks
  import_tasks: enigma.yml
  when: "'enigma' in roundcube_plugins"
  tags:
    - enigma

- name: Import getmail plugin tasks
  import_tasks: getmail.yml
  when: "'getmail' in roundcube_plugins"
  tags:
    - getmail

- name: Ensure the installer directory is deleted
  file:
    path: "{{ roundcube_working_dir }}/current/installer"
    state: absent
  when: roundcube_installer_delete | bool
